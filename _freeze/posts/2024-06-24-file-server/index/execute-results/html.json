{
  "hash": "c965859d3e0bf0e7a8479e14c8ce7521",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Static file server in R\"\ndate: \"2024-06-24\"\nsubtitle: \"{plumber} is (always) the answer\"\ncategories: [r, plumber, api]\nfreeze: true\n---\n\n\n[Plumber](https://www.rplumber.io/articles/routing-and-input.html?q=upload#static-file-handler), [ambiorix](https://ambiorix.dev/), and [opencpu](https://opencpu.r-universe.dev/opencpu) are the keys to putting R into production. \n\nSometimes all an API needs to do is statically serve files. Making a static file server with R is insanely easy.\n\nFor this example, I have a folder called `/public` which I want to serve files from at the API path `/static`.\n\nTo do this we create a plumber API using the `pr_static()` function or `#* @assets` if using the other plumber declaration format. \n\n## Making the file server\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plumber)\n\npr() |>\n  pr_static(\"/static\", \"./public\") |>\n  pr_run()\n```\n:::\n\n\n\n## calling the file server \n\nWe can call this api using a GET request: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr2)\n\niris_csv <- request(\"http://127.0.0.1:3000/static/iris.csv\") |>\n  req_perform() |>\n  resp_body_string()\n\nreadr::read_csv(iris_csv)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 150 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Species\ndbl (4): Sepal.Length, Sepal.Width, Petal.Length, Petal.Width\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <chr>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Alternative plumber format\n\n```r\n#* @assets ./public /static\nlist()\n```",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}